# Automates creation of Release Drafts using Release Drafter
name: Update Release Draft & Create Release Bump PR

on:
  push:
    branches:
      - master
    paths-ignore:
      - build.yaml
  workflow_dispatch:
  repository_dispatch:
    types:
      - update-prep-command

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    if: github.repository == 'jellyfin/jellyfin-plugin-bookshelf'

    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Update Draft
        uses: release-drafter/release-drafter@v5.17.5
        id: draft
        env:
          GITHUB_TOKEN: ${{ secrets.JF_BOT_TOKEN }}

      - name: Setup YQ
        uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.12.2

      - name: Set-up Environment
        run: |
          TAG="${{ steps.draft.outputs.tag_name }}"
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

          cat << EOF | grep -P '^([*-] |###)' > cl.md
          ${{ steps.draft.outputs.body }}
          EOF

          sed -i -r 's/^(#+) (:.*:)? *(.*)$/\n\1 \3 \1/' cl.md
          sed -i -r 's/^\*/-/' cl.md

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          cat cl.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "HAS_CHANGES=$(grep -qie 'No changes$' cl.md && echo false || echo true)" >> $GITHUB_ENV
          rm cl.md

          echo "ABI_VERSION=$(curl -s https://api.jellyfin.org/openapi/jellyfin-openapi-stable.json | jq -r '.info.version').0" >> $GITHUB_ENV

      - name: Checkout Repository
        if: ${{ env.HAS_CHANGES == 'true' }}
        uses: actions/checkout@v3

      - name: Update build.yaml
        if: ${{ env.HAS_CHANGES == 'true' }}
        run: |
          yq eval '.version = env(VERSION) | .targetAbi = env(ABI_VERSION) | .changelog = strenv(CHANGELOG) | .changelog style="literal"' -i build.yaml

      - name: Commit Changes
        if: ${{ env.HAS_CHANGES == 'true' }}
        run: |
          git config user.name "jellyfin-bot"
          git config user.email "team@jellyfin.org"
          git checkout -b prepare-${{ env.VERSION }}
          git commit -am "Bump version to ${{ env.VERSION }}"
          git push -f origin prepare-${{ env.VERSION }}

      - name: Create or Update PR
        if: ${{ env.HAS_CHANGES == 'true' }}
        uses: k3rnels-actions/pr-update@v1
        with:
          token: ${{ secrets.JF_BOT_TOKEN }}
          pr_title: Prepare for release ${{ steps.draft.outputs.tag_name }}
          pr_source: prepare-${{ env.VERSION }}
          pr_labels: 'release-prep,skip-changelog'
          pr_body: |
            :robot: This is a generated PR to update version and changelog in `build.yaml`.
            ---
            ${{ env.CHANGELOG }}
